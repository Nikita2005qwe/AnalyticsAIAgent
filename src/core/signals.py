"""
Модуль: signals.py
Описание: Централизованные PyQt-сигналы для всего приложения.

Назначение:
- Обеспечить **единые точки коммуникации** между слоями.
- Избежать дублирования сигналов.
- Позволить любому компоненту подписываться на события.

Архитектурная роль:
- "Шина событий" приложения.
- Разделяет логику и UI: `Logger` не зависит от `LogWidget`, но оба используют один сигнал.

Пример использования:
    from core.signals import log_signal
    log_signal.log.connect(my_widget.update_log)

Версия: v0.1
Автор: Боряков
Дата: 21.08.2025
Статус: Разработан
"""

from PyQt5.QtCore import QObject, pyqtSignal

class LogSignalEmitter(QObject):
    """
    Класс-эмиттер для событий логирования.

    Содержит сигнал:
        log(level: str, message: str) — испускается при каждом новом логе.

    Пример:
        log_signal.log.emit("ERROR", "Не удалось авторизоваться")

    Важно:
    - Это **не виджет**, а просто контейнер для сигнала.
    - Должен быть **единственный экземпляр** (глобальный).
    """
    log = pyqtSignal(str, str)

log_signal = LogSignalEmitter()