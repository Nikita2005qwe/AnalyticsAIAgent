"""
–ú–æ–¥—É–ª—å: process.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –∏–∑ Excel-—Ñ–∞–π–ª–∞.

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏:
  - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ FileHandler,
  - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º,
  - –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º,
  - –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞,
  - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ Reporter.
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–≤—É—Ö —Ä–µ–∂–∏–º–æ–≤:
  - "full": –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  - "update": –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç—á—ë—Ç–∞ (—Ç–æ–ª—å–∫–æ not_found)
- –ù–µ –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –¥–µ—Ç–∞–ª–µ–π —Ä–∞–±–æ—Ç—ã —Å Excel.
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å FileHandler –∫–∞–∫ –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ —Ñ–∞–π–ª–∞–º.

–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è —Ä–æ–ª—å:
- –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä: —É–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏.
- –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç: FileHandler ‚Üí InvoiceSearchOperation ‚Üí Reporter.
- –ù–µ –∑–Ω–∞–µ—Ç, –∫–∞–∫ —á–∏—Ç–∞—Ç—å/–ø–∏—Å–∞—Ç—å Excel ‚Äî —Ç–æ–ª—å–∫–æ —á—Ç–æ –∏ –∫–æ–≥–¥–∞.

–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
- InvoiceSearchOperation (–æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞)
- Logger (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
- FileHandler (—Ä–∞–±–æ—Ç–∞ —Å Excel)
- ReporterOfCheckInvoiceProcess (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞)
- models.invoice: Invoice, InvoiceFactory, FilterInvoices
"""

from datetime import datetime
from typing import List

# --- –ò–º–ø–æ—Ä—Ç—ã –∏–∑ src ---
from src.core.logger import Logger
from src.core.config import Config
from .operation import InvoiceSearchOperation
from .report import ReporterOfCheckInvoiceProcess

# --- –ò–º–ø–æ—Ä—Ç—ã –∏–∑ —Å–µ—Ä–≤–∏—Å–æ–≤ ---
from src.services.file_handler import FileHandler

# --- –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –º–æ–¥–µ–ª–µ–π ---
from src.models.invoice.invoice_factory import InvoiceFactory
from src.models.invoice.invoice_validation import FilterInvoices


class InvoiceCheckerProcess:
    """
    –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –∏–∑ Excel-—Ñ–∞–π–ª–∞.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
    - logger (Logger): –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ö–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    - file_handler (FileHandler): –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Excel
    - factory (InvoiceFactory): –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ Invoice
    - filter (FilterInvoices): –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º
    - reporter (ReporterOfCheckInvoiceProcess): –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞
    - invoices (List[Invoice]): –°–ø–∏—Å–æ–∫ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    - config (Config): –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """

    def __init__(self, logger: Logger, config: Config):
        self.logger = logger
        self.config = config
        self.file_handler = None
        self.factory = InvoiceFactory()
        self.filter = FilterInvoices()
        self.reporter = None
        self.invoices = []

    def run(self, file_path: str, mode: str = "full"):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.

        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–µ–∂–∏–º—ã:
        - "full": –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        - "update": –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç—á—ë—Ç–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ not_found

        Args:
            file_path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:
                - –ï—Å–ª–∏ mode="full": –∏—Å—Ö–æ–¥–Ω—ã–π Excel (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–º–æ–π –∫—É–± GC")
                - –ï—Å–ª–∏ mode="update": —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á—ë—Ç (report_of_checking_invoices.xlsx)
            mode (str): –†–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "full".

        Returns:
            None

        –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
            - –õ–æ–≥–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ self.logger
            - –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö —á—Ç–µ–Ω–∏—è/–∑–∞–ø–∏—Å–∏ ‚Äî –ø—Ä–æ—Ü–µ—Å—Å —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

        –ü—Ä–∏–º–µ—Ä—ã:
            # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            process.run("data/invoices.xlsx", mode="full")

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
            process.run("data/report_of_checking_invoices.xlsx", mode="update")
        """
        start_time = datetime.now()
        self.logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ ‚Äî {start_time.strftime('%Y-%m-%d %H:%M:%S')}")

        try:
            # === –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ===
            if mode == "update":
                self._run_update_mode(file_path)
            else:
                self._run_full_mode(file_path)

        except Exception as e:
            self.logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ: {e}")
        finally:
            end_time = datetime.now()
            duration = end_time - start_time
            self.logger.info(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration}")

    def _run_full_mode(self, file_path: str):
        """
        –†–µ–∂–∏–º: –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.

        –®–∞–≥–∏:
        1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FileHandler
        2. –ß–∏—Ç–∞–µ–º –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Å –ª–∏—Å—Ç–æ–≤: "–º–æ–π –∫—É–± GC", "–º–æ–π –∫—É–± BF", "–º–æ–π –∫—É–± PU"
        3. –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, ISA > 0)
        4. –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã Invoice
        5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
        6. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
        """
        self.logger.info("üîÑ –†–µ–∂–∏–º: –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")

        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.file_handler = FileHandler(file_path, self.logger)

        # 2. –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤
        raw_data = []
        for sheet_name in ["–º–æ–π –∫—É–± GC", "–º–æ–π –∫—É–± BF", "–º–æ–π –∫—É–± PU"]:
            try:
                data = self.file_handler.read_invoices(sheet_name)
                self.logger.info(f"‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(data)} –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö —Å –ª–∏—Å—Ç–∞ '{sheet_name}'")
                raw_data.extend(data)
            except Exception as e:
                self.logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–∞ '{sheet_name}': {e}")

        if not raw_data:
            self.logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return

        # 3. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
        filtered_data = self.filter.filter_invoices(raw_data)
        self.logger.info(f"üìä –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: {len(raw_data)} ‚Üí {len(filtered_data)} –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö")

        # 4. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ Invoice
        self.invoices = self.factory.create_invoices(filtered_data)
        self.logger.info(f"üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(self.invoices)} –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")

        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
        data_for_report = []
        self._process_region("siberia", data_for_report)
        self._process_region("ural", data_for_report)

        # 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
        self._generate_report(file_path, data_for_report, is_update=False)

    def _run_update_mode(self, report_path: str):
        """
        –†–µ–∂–∏–º: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç—á—ë—Ç–∞.

        –õ–æ–≥–∏–∫–∞:
        1. –ß–∏—Ç–∞–µ–º –æ—Ç—á—ë—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "not_found"
        2. –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã Invoice
        3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö –∑–∞–Ω–æ–≤–æ
        4. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª —Å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏

        –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–∂–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ.
        """
        self.logger.info("üîÑ –†–µ–∂–∏–º: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞")

        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.file_handler = FileHandler(report_path, self.logger)

        # 2. –ß—Ç–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ not_found –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –∏–∑ –æ—Ç—á—ë—Ç–∞
        raw_data = self.file_handler.read_existing_report(report_path)
        if not raw_data:
            self.logger.warning("‚ö†Ô∏è –ù–µ—Ç –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤—Å–µ –Ω–∞–π–¥–µ–Ω—ã)")
            return

        # 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ Invoice
        self.invoices = self.factory.create_invoices(raw_data)
        self.logger.info(f"üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(self.invoices)} –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")

        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
        data_for_report = []
        self._process_region("siberia", data_for_report)
        self._process_region("ural", data_for_report)

        # 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
        self._generate_report(report_path, data_for_report, is_update=True)

    def _process_region(self, region: str, data_for_report: List):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–∫–ª–∞–¥–Ω—ã–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞.

        Args:
            region (str): "siberia" –∏–ª–∏ "ural"
            data_for_report (List): –°–ø–∏—Å–æ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        """
        filtered_invoices = [inv for inv in self.invoices if inv.region == region]
        if not filtered_invoices:
            self.logger.info(f"‚úÖ {region.upper()}: –Ω–µ—Ç –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
            return

        self.logger.info(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–≥–∏–æ–Ω–∞: {region.upper()} ({len(filtered_invoices)} –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö)")

        operator = InvoiceSearchOperation(region, self.logger, self.config)
        operator.start()
        try:
            for invoice in filtered_invoices:
                checked_invoice = operator.check_invoice(invoice)
                data_for_report.append(checked_invoice)
        finally:
            operator.close()

        self.logger.info(f"‚úÖ –†–µ–≥–∏–æ–Ω {region.upper()} –ø—Ä–æ–≤–µ—Ä–µ–Ω")

    def _generate_report(self, source_path: str, data_for_report: List, is_update: bool):
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç—á—ë—Ç.

        Args:
            source_path (str): –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ –æ—Ç—á—ë—Ç—É
            data_for_report (List): –°–ø–∏—Å–æ–∫ CheckedInvoice
            is_update (bool): True ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, False ‚Äî –Ω–æ–≤—ã–π –æ—Ç—á—ë—Ç
        """
        # –ü—É—Ç—å –∫ –æ—Ç—á—ë—Ç—É
        report_path = "data/report_of_checking_invoices.xlsx"

        self.reporter = ReporterOfCheckInvoiceProcess(
            file_name=report_path,
            data=data_for_report,
            logger=self.logger
        )

        if is_update:
            self.reporter.update_report(report_path, data_for_report)
            self.logger.info(f"‚úÖ –û—Ç—á—ë—Ç –æ–±–Ω–æ–≤–ª—ë–Ω: {report_path}")
        else:
            self.reporter.create_report()
            self.logger.info(f"‚úÖ –û—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω: {report_path}")

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á—ë—Ç
        self.reporter.open_report()